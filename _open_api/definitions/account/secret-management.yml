openapi: 3.0.0
servers:
  - url: 'https://api.nexmo.com'
info:
  version: 1.0.0
  title: Secret Management API
  description: >-
    The Nexmo Secret Management API enables you to create one new API Secret in addition to your existing API Secret. Once you've validated that your new API secret works you can revoke your old API secret using this API
security:
  - basicAuth: []
paths:
  /accounts/{account_id}/secrets:
    get:
      summary: Retrieve API Secrets
      operationId: retrieveSecrets
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: API secret response
          content:
            application/json:
              schema:
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            description: The URI to this secret
                            example: /accounts/abcd1234/secrets
                  _embedded:
                    type: object
                    description: A list of secrets under the "secrets" key. See [Retrieve Secret](#retrieveSecret) for a description of the returned fields
                    properties:
                      secrets:
                        type: array
                        items:
                            $ref: '#/components/schemas/SecretInfo'
        '401':
          $ref: '#/components/responses/BadCredentialsError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    post:
      summary: Create API Secret
      operationId: createSecret
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - secret
              properties:
                secret:
                  description: |
                      The new secret must follow these rules:

                      * minimum 8 characters
                      * maximum 25 characters
                      * minimum 1 lower case character
                      * minimum 1 upper case character
                      * minimum 1 digit

                  type: string
                  example: 'example-4PI-secret'
      responses:
        '201':
          description: Secret created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretInfo'
        '400':
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: >-
                      https://developer.nexmo.com/api-errors/account/secret-management#validation
                  title:
                    type: string
                    example: Bad Request
                  detail:
                    type: string
                    example: The request failed due to validation errors
                  invalid_parameters:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: secret
                        reason:
                          type: string
                          example: Does not meet complexity requirements
                  instance:
                    $ref: '#/components/fields/instance'
        '401':
          $ref: '#/components/responses/BadCredentialsError'
        '403':
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: https://developer.nexmo.com/api-errors/account/secret-management#maximum-secrets-allowed
                  title:
                    type: string
                    example: Maxmimum number of secrets already met
                  detail:
                    type: string
                    example: This account has reached maximum number of '2' allowed secrets
                  instance:
                    $ref: '#/components/fields/instance'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /accounts/{account_id}/secrets/{secret_id}:
    get:
      summary: Retrieve API Secret
      operationId: retrieveSecret
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/secretId'
      responses:
        '200':
          description: API secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretInfo'
        '401':
          $ref: '#/components/responses/BadCredentialsError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      summary: Revoke API Secret
      operationId: revokeSecret
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/secretId'
      responses:
        '204':
          description: Revoked secret response
        '401':
          $ref: '#/components/responses/BadCredentialsError'
        '403':
          content:
            application/json:
              schema:
                properties:
                  type:
                    type: string
                    example: https://developer.nexmo.com/api-errors/account/secret-management#delete-last-secret
                  title:
                    type: string
                    example: Secret Deletion Forbidden
                  detail:
                    type: string
                    example: Can not delete the last secret. The account must always have at least 1 secret active at any time
                  instance:
                    $ref: '#/components/fields/instance'
      '404':
          $ref: '#/components/responses/NotFoundError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
  parameters:
    accountId:
     name: account_id
     in: path
     description: ID of the account
     example: abcd1234
     required: true
     schema:
       type: string
    secretId:
      name: secret_id
      in: path
      description: ID of the API Secret
      example: ad6dc56f-07b5-46e1-a527-85530e625800
      required: true
      schema:
        type: string
  fields:
    instance:
      type: string
      example: 797a8f199c45014ab7b08bfe9cc1c12c
  responses:
    BadCredentialsError:
      description: Credential is missing or invalid
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                example: 'https://developer.nexmo.com/api-errors#unauthorized'
              title:
                type: string
                example: Invalid credentials supplied
              detail:
                type: string
                example: You did not provide correct credentials.
              instance:
                $ref: '#/components/fields/instance'
    NotFoundError:
      description: Resource could not be found
      content:
        application/json:
          schema:
            properties:
              type:
                type: string
                example: 'https://developer.nexmo.com/api-errors#invalid-api-key'
              title:
                type: string
                example: Invalid API Key
              detail:
                type: string
                example: API key 'ABC123' does not exist, or you do not have access
              instance:
                $ref: '#/components/fields/instance'
  schemas:
    SecretInfo:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  description: The URI to this secret
                  example: /accounts/abcd1234/secrets/ad6dc56f-07b5-46e1-a527-85530e625800
        id:
          type: string
          description: Secret ID
          example: ad6dc56f-07b5-46e1-a527-85530e625800
        created_at:
          type: string
          description: The date/time the secret was created
          example: '2017-03-02T16:34:49Z'
    LinkSecret:
      properties:
        self:
          type: object
          allOf:
            - $ref: '#/components/schemas/SelfSecret'
    LinkSecrets:
      properties:
        self:
          type: object
          allOf:
            - $ref: '#/components/schemas/SelfSecrets'
    SelfSecret:
      properties:
        href:
          example: "http://api.nexmo.com/accounts/acc6111f/secrets/bfb562bb-bbbb-cccc-dddd-0ed7f85819d4"
          type: string
    SelfSecrets:
      properties:
        href:
          example: "http://api.nexmo.com/accounts/acc6111f/secrets"
          type: string

x-errors:
  validation:
    description: The provided payload is invalid
    resolution: |
        Modify your request to provide a valid payload.

        * Minimum 8 characters
        * Maximum 25 characters
        * Minimum 1 lower case character
        * Minimum 1 upper case character
        * Minimum 1 digit
    link:
      text: View API reference
      url: /api/account/api-secret-management#createSecret

  delete-last-secret:
    description: You can not delete your last API secret
    resolution: Add another API secret before deleting this one
